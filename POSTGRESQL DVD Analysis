--DVD Rental Code
--How many and what are the categories?
SELECT COUNT(*)
FROM category

SELECT *
FROM category

--How many actors/actresses are there?
SELECT COUNT(*)
FROM actor

--Join the film and film_actor tables 
SELECT film.film_id, title, release_year, actor_id
FROM film
INNER JOIN film_actor
	ON film.film_id = film_actor.film_id

--Join three tables fIlm, film_actor, actor
SELECT *
FROM film AS fil
INNER JOIN film_actor AS fa
	ON fil.film_id = fa.film_id
INNER JOIN actor AS act
	ON fa.actor_id = act.actor_id

--Find out how many movies each actor has been in
SELECT COUNT(first_name), first_name, last_name
FROM film AS fil
INNER JOIN film_actor AS fa
	ON fil.film_id = fa.film_id
INNER JOIN actor AS act
	ON fa.actor_id = act.actor_id
GROUP BY first_name, last_name

--Which actor/Actress acted in the most movies?
SELECT COUNT(first_name), first_name, last_name
FROM film AS fil
INNER JOIN film_actor AS fa
	ON fil.film_id = fa.film_id
INNER JOIN actor AS act
	ON act.actor_id = fa.actor_id
GROUP BY first_name, last_name
ORDER BY COUNT(first_name) DESC

--May be wrong if there are multiple people with the same first name

--Ordered by first name to check if similar first names had different counts and they did
SELECT COUNT(first_name), first_name, last_name
FROM film AS fil
INNER JOIN film_actor AS fa
	ON fil.film_id = fa.film_id
INNER JOIN actor AS act
	ON act.actor_id = fa.actor_id
GROUP BY first_name, last_name
ORDER BY (first_name) DESC

--Creat a graph showing the amount of movies the top ten actors/actress have been in
SELECT COUNT(first_name), first_name, last_name, CONCAT(first_name, ' ', last_name) AS first_last
FROM film AS fil
INNER JOIN film_actor AS fa
    ON fil.film_id = fa.film_id
INNER JOIN actor AS act
    ON act.actor_id = fa.actor_id
GROUP BY first_name, last_name
ORDER BY COUNT(first_name) DESC
LIMIT 10


--Which movies was the number 1 actor/actress in
SELECT title, first_name, last_name, act.actor_id
FROM film AS fil
INNER JOIN film_actor AS fa
    ON fil.film_id = fa.film_id
INNER JOIN actor AS act
    ON act.actor_id = fa.actor_id
WHERE act.actor_id = 101

--No double names find which actor/actress played in the most/least movies. Most
SELECT COUNT(first_name), first_name, last_name
FROM film AS fil
INNER JOIN film_actor AS fa
	ON fil.film_id = fa.film_id
INNER JOIN actor AS act
	ON act.actor_id = fa.actor_id
GROUP BY first_name, last_name
ORDER BY COUNT(first_name) DESC

--Least
SELECT COUNT(first_name), first_name, last_name
FROM film AS fil
INNER JOIN film_actor AS fa
	ON fil.film_id = fa.film_id
INNER JOIN actor AS act
	ON act.actor_id = fa.actor_id
GROUP BY first_name, last_name
ORDER BY COUNT(first_name)

--Longest Film top 3
SELECT title, length, film_id, release_year
FROM film
ORDER BY length DESC
LIMIT 3

--Shortest Films 
SELECT title, length, film_id, release_year
FROM film
ORDER BY length
LIMIT 3

--Find any empty districts
SELECT *
FROM address
WHERE district = ''

--Are there any City ID's that match
SELECT COUNT(city_id) 
FROM address
GROUP BY city_id 
ORDER BY COUNT(city_id) DESC

--How many different countries does this data pull from
SELECT COUNT(country)
FROM country

--Which customer ID has rented the most dvd's
SELECT COUNT(ren.customer_id), ren.customer_id
FROM rental AS ren
JOIN customer AS cus
	ON ren.customer_id = cus.customer_id
GROUP BY ren.customer_id
ORDER BY COUNT(ren.customer_id) DESC

--Who is it
SELECT customer_id, first_name, last_name
FROM customer
WHERE customer_id = 148

--How much did they spend?
SELECT SUM(amount)
FROM customer AS cus
JOIN payment AS pay
	ON cus.customer_id = pay.customer_id
WHERE cus.customer_id = 148

--How much did they spend on average?
SELECT AVG(amount)
FROM customer AS cus
JOIN payment AS pay
	ON cus.customer_id = pay.customer_id
WHERE cus.customer_id = 148

--Most they spent
SELECT MAX(amount)
FROM payment
WHERE customer_id = 148

--Least?
SELECT MAX(amount)
FROM payment
WHERE customer_id = 148

--How many stores 
SELECT *
FROM store

--Total sales for store 1
SELECT SUM(amount)
FROM payment
WHERE staff_id = 1

--Total sales for store 2
SELECT SUM(amount)
FROM payment
WHERE staff_id = 2

--Daily Sales for store 1 ordered by date
SELECT CAST(payment_date AS date), SUM(amount)
FROM payment
WHERE staff_id = 1
GROUP BY payment_date
ORDER BY payment_date

--Can check all answers for store 2 by changing the staff_id = 2

-- Total amounts each customer has spent at store 1
SELECT SUM(amount) AS Total_Spent, customer_id
FROM payment
WHERE staff_id = 1
GROUP BY customer_id
ORDER BY total_Spent DESC

-- Total amount customers spent per customer at store 2
SELECT SUM(amount) AS Total_Spent, customer_id
FROM payment
WHERE staff_id = 2
GROUP BY customer_id
ORDER BY total_Spent DESC

--Right clicked on the payment_date under columns went to properties and switched it from DATETIME to DATE.

--On which days did the stores have sales data
SELECT payment_date
FROM payment
GROUP BY payment_date
ORDER BY payment_date

--Weekly sales numbers for store 1
SELECT SUM(amount)
FROM payment
WHERE payment_date BETWEEN '2007-02-14' AND '2007-02-21'
AND staff_id = 1

SELECT SUM(amount)
FROM payment
WHERE payment_date BETWEEN '2007-03-16' AND '2007-03-23'
AND staff_id = 1

SELECT SUM(amount)
FROM payment
WHERE payment_date BETWEEN '2007-04-05' AND '2007-04-12'
AND staff_id = 1

SELECT SUM(amount)
FROM payment
WHERE payment_date BETWEEN '2007-04-26' AND '2007-04-30'
AND staff_id = 1

SELECT SUM(amount)
FROM payment
WHERE payment_date = '2007-05-14'
AND staff_id = 1

--Average sales for week one 
SELECT AVG(amount)
FROM payment
WHERE payment_date BETWEEN '2007-02-14' AND '2007-02-21'

--Average sales first month
SELECT AVG(amount)
FROM payment
WHERE payment_date BETWEEN '2007-02-14' AND '2007-02-21'

--Total sales for first month store 1
SELECT SUM(amount)
FROM payment
WHERE payment_date BETWEEN '2007-02-14' AND '2007-02-28'
AND staff_id = 1

--Total sales for first year store 1
SELECT SUM(amount)
FROM payment
WHERE payment_date BETWEEN '2007-02-14' AND '2007-05-14'
AND staff_id = 1

--How many languages are we looking at
SELECT *
FROM language

--Identify the staff
SELECT *
FROM staff

--How many different postal codes bought from the stores
SELECT COUNT(DISTINCT postal_code)
FROM address

--How many different cities bought from the stores
SELECT COUNT(DISTINCT city)
FROM city

-- 2 less on the postal code which could mean missing data 

--How many actors in each genre
SELECT COUNT(act.actor_id), name
FROM category AS cat
INNER JOIN film_category AS fc
    ON cat.category_id = fc.category_id
INNER JOIN film
    ON film.film_id = fc.film_id
RIGHT JOIN film_actor AS fa
	on fa.film_id = film.film_id
INNER JOIN actor AS act
	on act.actor_id = fa.actor_id
GROUP BY cat.name
ORDER BY COUNT(fa.actor_id) DESC

--Which actors/actresses acted in at least five Horror movies
SELECT name, fa.actor_id, act.first_name, act.last_name, COUNT (*)
FROM category AS cat
INNER JOIN film_category AS fc
    ON cat.category_id = fc.category_id
INNER JOIN film 
    ON film.film_id = fc.film_id
INNER JOIN film_actor AS fa
	on film.film_id = fa.film_id
INNER JOIN actor AS act
	on act.actor_id = fa.actor_id
WHERE name = 'Horror'
GROUP BY name, act.first_name, fa.actor_id, act.last_name
HAVING COUNT(*)>5
ORDER BY COUNT (*) DESC

--Who made the most horror movies
SELECT name, fa.actor_id, act.first_name, act.last_name, COUNT (*)
FROM category AS cat
INNER JOIN film_category AS fc
    ON cat.category_id = fc.category_id
INNER JOIN film 
    ON film.film_id = fc.film_id
INNER JOIN film_actor AS fa
	on film.film_id = fa.film_id
INNER JOIN actor AS act
	on act.actor_id = fa.actor_id
WHERE name = 'Horror'
GROUP BY name, act.first_name, fa.actor_id, act.last_name
ORDER BY COUNT (*) DESC
LIMIT 1

--If you wanted to find the different genres just switch out "Horror" with genre name

--Which actors/actresses played in at least five movies per genre.
SELECT name, fa.actor_id, act.first_name, act.last_name, COUNT (*)
FROM category AS cat
INNER JOIN film_category AS fc
    ON cat.category_id = fc.category_id
INNER JOIN film AS film
    ON film.film_id = fc.film_id
INNER JOIN film_actor AS fa
	on fa.film_id = film.film_id
INNER JOIN actor AS act
	on act.actor_id = fa.actor_id
GROUP BY name, act.first_name, fa.actor_id, act.last_name
HAVING COUNT(*)>5
ORDER BY COUNT (*) DESC

--Which customers are from which countries
SELECT co.country_id, co.country, cus.first_name, cus.last_name
FROM country AS co
INNER JOIN city
    ON co.country_id = city.country_id
INNER JOIN address AS add
    ON city.city_id = add.city_id
INNER JOIN customer AS cus
	on add.address_id = cus.customer_id
ORDER BY co.country

--Country with the most customers
SELECT co.country_id, co.country, COUNT(*)
FROM country AS co
INNER JOIN city
    ON co.country_id = city.country_id
INNER JOIN address AS add
    ON city.city_id = add.city_id
INNER JOIN customer AS cus
	on add.address_id = cus.customer_id
GROUP BY co.country_id, co.country
ORDER BY COUNT(*) DESC
LIMIT 1

--Country with the least customers
SELECT co.country_id, co.country, COUNT(*)
FROM country AS co
INNER JOIN city
    ON co.country_id = city.country_id
INNER JOIN address AS add
    ON city.city_id = add.city_id
INNER JOIN customer AS cus
	on add.address_id = cus.customer_id
GROUP BY co.country_id, co.country
ORDER BY COUNT(*)
LIMIT 1

--How many customers from each US State
SELECT co.country_id, co.country, add.district, COUNT(*)
FROM country AS co
INNER JOIN city
    ON co.country_id = city.country_id
INNER JOIN address AS add
    ON city.city_id = add.city_id
INNER JOIN customer AS cus
    ON add.address_id = cus.customer_id
GROUP BY co.country_id, co.country, add.district
HAVING country = 'United States'
ORDER BY COUNT(*) DESC

-- Which cities do we have the most customers
SELECT co.country_id, co.country, add.district, city.city, COUNT(*)
FROM country AS co
INNER JOIN city
    ON co.country_id = city.country_id
INNER JOIN address AS add
    ON city.city_id = add.city_id
INNER JOIN customer AS cus
	on add.address_id = cus.customer_id
GROUP BY co.country_id, co.country, add.district, city.city
ORDER BY COUNT(*) DESC

--Which store stocks the most Sci-Fi movies
SELECT store_id, name, COUNT(*)
FROM rental AS ren
INNER JOIN inventory AS inv
	ON ren.inventory_id = inv.inventory_id
INNER JOIN film_category AS fc
	ON inv.film_id = fc.film_id
INNER JOIN category AS cat
	ON fc.category_id = cat.category_id
INNER JOIN film
	ON fc.film_id = film.film_id
GROUP BY store_id, name
HAVING name = 'Sci-Fi'
ORDER BY COUNT(*) DESC

--Which US city rents the most horror movies
SELECT country, district, name, city, COUNT(*)
FROM country AS co
INNER JOIN city
    ON co.country_id = city.country_id
INNER JOIN address AS add
    ON city.city_id = add.city_id
INNER JOIN customer AS cus
	ON add.address_id = cus.customer_id
INNER JOIN rental AS ren
	ON cus.customer_id = ren.customer_id
INNER JOIN inventory AS inv
	ON ren.inventory_id = inv.inventory_id
INNER JOIN film_category AS fc
	ON inv.film_id = fc.film_id
INNER JOIN category AS cat
	ON fc.category_id = cat.category_id
INNER JOIN film
	ON fc.film_id = film.film_id
WHERE country = 'United States'
AND name = 'Horror'
GROUP BY country, district, name, city
ORDER BY COUNT(*) DESC















